swagger: '2.0'
info:
  description: "erster Entwurf einer Daten-Import-API, die den Import räumlicher Daten (SpatialUnits, Georesources und Indicators) von beliebigen Datenquellen und Koordinatenreferenzsystemen ermöglicht."
  version: "0.0.1"
  title: "KomMonitor Data Import API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "christian.danowski-buhren@hs-bochum.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8087"
basePath: "/import"
tags:
- name: "spatial-units"
  description: "spatial units/levels, for which indicators can be associated (e.g. rastercells, building blocks, quarters, city districts, city boroughs, city)"
- name: "georesources"
  description: "Georesource necessary for the computation of indicators (e.g. land use, locations of schools, streets/ways)"
- name: "indicators"
  description: "indicators"
schemes:
- "http"
- "https"
securityDefinitions:
  # basicAuth: abcdef12345
   basicAuth:
     type: basic

security:
  - basicAuth: []

paths:

  /spatial-units:
    post:
      tags:
      - "spatial-units"
      summary: "Import a new spatial-unit"
      description: "Import a new spatial unit for a certain period of time. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /spatial-units of KomMonitor Data Management API"
      operationId: "importSpatialUnit"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_SpatialUnitPOSTInputType"
      responses:
        201:
          description: "Created"
          headers:
            location:
              type: string
              description: identifier of the created spatial unit resource
        401:
          $ref: "#/responses/UnauthorizedError"
        405:
          description: "Invalid input"
    get:
      tags:
      - "spatial-units"
      summary: "retrieve information about available features of different spatial units/levels"
      description: "retrieve information about available features of different spatial units/levels by forwarding request against GET /spatial-units of KomMonitor Data Management API"
      operationId: "getSpatialUnits"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            items:
              $ref: './definitions.yaml#/definitions/Import_SpatialUnitOverviewType'
        401:
          $ref: "#/responses/UnauthorizedError"
        400:
          description: "Invalid status value"

  /spatial-units/{spatialUnitId}:
    parameters:
      - name: "spatialUnitId"
        in: "path"
        description: "the unique identifier of the spatial level"
        required: true
        type: string
    get:
      tags:
      - "spatial-units"
      summary: "retrieve information about available features of the selected spatial unit/level"
      description: "retrieve information about available features of the selected spatial unit/level by forwarding request against GET /spatial-units/{spatialUnitId} of KomMonitor Data Management API"
      operationId: "getSpatialUnitsById"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: './definitions.yaml#/definitions/Import_SpatialUnitOverviewType'
        401:
          $ref: "#/responses/UnauthorizedError"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "spatial-units"
      summary: "Modify/Update the features of the selected spatial-unit"
      description: "Modify/Update the features of the selected spatial-unit by submitting a new dataset of features that correspond to a certain period of validity. Internally, those geometries are compared to the existing ones to mark 'old' geometries that are no longer in use as outdated. Hence, each geometric object is only persisted once and its use is controlled by time validity marks. Forwards the request against PUT /spatial-units/{spatialUnitId} of KomMonitor Data Management API"
      operationId: "updateSpatialUnit"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_SpatialUnitPUTInputType"
      responses:
        200:
          description: "OK"
          headers:
            location:
              type: string
              description: identifier of the created spatial unit resource
        401:
          $ref: "#/responses/UnauthorizedError"
        405:
          description: "Invalid input"

  ########## GEO RESOURCES
  /georesources:
    post:
      tags:
      - "georesources"
      summary: "Import a new geo-resource"
      description: "Import a geo-resource dataset for a certain period of time. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /georesources of KomMonitor Data Management API"
      operationId: "importGeoresource"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_GeoresourcePOSTInputType"
      responses:
        201:
          description: "Created"
          headers:
            location:
              type: string
              description: identifier of the created geo-resource resource
        401:
          $ref: "#/responses/UnauthorizedError"
        405:
          description: "Invalid input"
    get:
      tags:
      - "georesources"
      summary: "retrieve information about available features of different geo-resource datasets"
      description: "retrieve information about available features of different geo-resource datasets by forwarding request against GET /georesources of KomMonitor Data Management API"
      operationId: "getGeoresources"
      produces:
      - "application/json"
      parameters:
        - name: "topic"
          in: "query"
          description: "thematic topic to filter available geo-resource"
          required: false
          type: string
          enum:
            - demography
            - environment
            - habitation
            - migration
            - social
      responses:
        200:
          description: "OK"
          schema:
            type: array
            items:
              $ref: './definitions.yaml#/definitions/Import_GeoresourceOverviewType'
        400:
          description: "Invalid status value"
        401:
          $ref: "#/responses/UnauthorizedError"

  /georesources/{georesourceId}:
    parameters:
      - name: "georesourceId"
        in: "path"
        description: "identifier of the geo-resource dataset"
        required: true
        type: string
    get:
      tags:
      - "georesources"
      summary: "retrieve information about available features of the selected geo-resource dataset"
      description: "retrieve information about available features of the selected geo-resource dataset by forwarding request against GET /georesources/{georesourceId} of KomMonitor Data Management API"
      operationId: "getGeoresourceById"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: './definitions.yaml#/definitions/Import_GeoresourceOverviewType'
        401:
          $ref: "#/responses/UnauthorizedError"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "georesources"
      summary: "Modify/Update the features of the selected geo-resource dataset"
      description: "Modify/Update the features of the selected geo-resource dataset by submitting a new dataset of features that correspond to a certain period of validity. Internally, those geometries are compared to the existing ones to mark 'old' geometries that are no longer in use as outdated. Hence, each geometric object is only persisted once and its use is controlled by time validity marks. Forwards the request against PUT /spatial-units/{spatialUnitId} of KomMonitor Data Management API"
      operationId: "updateGeoresource"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_GeoresourcePUTInputType"
      responses:
        200:
          description: "OK"
          headers:
            location:
              type: string
              description: identifier of the created geo-resource dataset
        401:
          $ref: "#/responses/UnauthorizedError"
        405:
          description: "Invalid input"

######## INDICATORS
  /indicators:
      post:
        tags:
        - "indicators"
        summary: "Import a new indicator dataset"
        description: "Import an indicator dataset for a certain period of time and spatial unit/level. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /indicators of KomMonitor Data Management API"
        operationId: "importIndicator"
        consumes:
        - "application/json"
        parameters:
        - name: "indicator-data"
          in: "body"
          description: "indicator data"
          required: true
          schema:
            $ref: './definitions.yaml#/definitions/Import_IndicatorPOSTInputType'
        responses:
          201:
            description: "Created"
            headers:
              location:
                type: string
                description: identifier of the created indicator
          405:
            description: "Invalid input"
      get:
        tags:
        - "indicators"
        summary: "retrieve information about available indicators"
        description: "retrieve information about available indicators by forwarding request against GET /indicators of KomMonitor Data Management API"
        operationId: "getIndicators"
        produces:
        - "application/json"
        parameters:
          - name: "topic"
            in: "query"
            description: "thematic topic to filter available indicators"
            required: false
            type: string
            enum:
              - demography
              - environment
              - habitation
              - migration
              - social
        responses:
          200:
            description: "OK"
            schema:
              type: array
              items:
                $ref: './definitions.yaml#/definitions/Import_IndicatorOverviewType'
          401:
            $ref: "#/responses/UnauthorizedError"
          400:
            description: "Invalid status value"

  /indicators/{indicatorId}:
      parameters:
      - name: "indicatorId"
        in: "path"
        description: "unique identifier of the selected indicator dataset"
        required: true
        type: string
      get:
          tags:
          - "indicators"
          summary: "retrieve information about the selected indicator"
          description: "retrieve information about the selected indicator by forwarding request against GET /indicators/{indicatorId} of KomMonitor Data Management API"
          operationId: "getIndicatorById"
          produces:
          - "application/json"
          responses:
            200:
              description: "OK"
              schema:
                $ref: './definitions.yaml#/definitions/Import_IndicatorOverviewType'
            400:
              description: "Invalid status value"
            401:
              $ref: "#/responses/UnauthorizedError"
      put:
        tags:
        - "indicators"
        summary: "Modify/Update the contents of the selected indicator dataset"
        description: "Modify/Update the contents of the selected indicator dataset for a certain spatial-unit by forwarding request against PUT /indicators/{indicatorId} of KomMonitor Data Management API"
        operationId: "updateIndicator"
        consumes:
        - "application/json"
        parameters:
        - name: "indicator-data"
          in: "body"
          description: "indicator data"
          required: true
          schema:
            $ref: './definitions.yaml#/definitions/Import_IndicatorPUTInputType'
        responses:
          200:
            description: "OK - Updated"
            headers:
              location:
                type: string
                description: identifier of the modified indicator
          401:
            $ref: "#/responses/UnauthorizedError"
          405:
            description: "Invalid input"


responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string



externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
