definitions:

  Import_SpatialUnitPOSTInputType:
    description: Definitions for importing an new spatial unit
    type: object
    required:
      - spatialUnitPostBody
      - dataSource
      - converter
      - propertyMapping
    properties:
      spatialUnitPostBody:
        $ref: '../data-management/definitions.yaml#/definitions/SpatialUnitPOSTInputType'
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/SpatialResourcePropertyMappingType"

  Import_GeoresourcePOSTInputType:
    description: Definitions for importing an new georesource
    type: object
    required:
      - georesourcePostBody
      - dataSource
      - converter
      - propertyMapping
    properties:
      georesourcePostBody:
        $ref: '../data-management/definitions.yaml#/definitions/GeoresourcePOSTInputType'
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/SpatialResourcePropertyMappingType"

  Import_IndicatorPOSTInputType:
    description: Definitions for importing an new indicator
    type: object
    required:
      - indicatorPostBody
      - dataSource
      - converter
      - propertyMapping
    properties:
      indicatorPostBody:
        $ref: '../data-management/definitions.yaml#/definitions/IndicatorPOSTInputType'
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/IndicatorPropertyMappingType"

  DataSourceType:
    description: Holds various information about the datasource for importing new resources
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: the type of datasource from which geodata or indicator data should be retrieved
        enum:
          - DB
          - FILE
          - FTP
          - HTTP
          - INLINE  
      parameters:
        type: array
        description: list with descriptions of additional parameters that are required for retrieving datasets from a datasource
        items:
          $ref: "#/definitions/ParameterType"

  DataSourceDefinitionType:
    description: Holds various information about the datasource for importing new resources
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: the type of datasource from which geodata or indicator data should be retrieved
        enum:
          - DB
          - FILE
          - FTP
          - HTTP
          - INLINE
      parameters:
        type: array
        description: list of additional parameters as key-value-pairs that are required for retrieving datasets from a datasource
        items:
          $ref: "#/definitions/ParameterValueType"

  PayloadType:
    description: The payload of the dataset that should we imported. Might be either provided inline or as a reference on a remote dataset.
    type: object
    properties:
      inputType:
        type: string
        description: specifies the the way the payload content will be provided. Possible values are 'DATA' for providing data inline or 'REFERENCE' to specifiy an URL that references some remote data.
        enum:
          - DATA
          - REFERENCE
      content:
        type: string
        description: the content according to the selected sourceFormat (i.e. an URL to a WFS, or Base64 encoded String of a zipped ShapeFile or GeoJSON)

  SpatialResourcePropertyMappingType:
    description: Definitions for mapping datasource properties to required properties for spatial units and georesources
    type: object
    required:
      - idProperty
      - nameProperty
    properties:
      identifierProperty:
        type: string
        description: the property that contains each feature's unique identifier
      nameProperty:
        type: string
        description: the property that contains each feature's unique name
      validStartDateProperty:
        type: string
        description: the property that contains information about each feature's period of validity start date (optional, can also be configured globally for all features in POST and PUT requests)
      validEndDateProperty:
        type: string
        description: the property that contains information about each feature's period of validity end date - might be null to indicator that feature is most current feature (optional, can also be configured globally for all features in POST and PUT requests)
      arisenFromProperty:
        type: string
        description: the property that contains an ID that references a former spatial feature that over time evolved into the respective feature

  IndicatorPropertyMappingType:
    description: Definitions for mapping datasource properties to required properties for indicators
    type: object
    required:
      - spatialReferenceKeyProperty
      - indicatorValueProperty
      - timestampProperty
    properties:
      spatialReferenceKeyProperty:
        type: string
        description: property that contains the identifier of the spatial feature to which the values shall be applied
      indicatorValueProperty:
        type: string
        description: property that contains the numeric value of the indicator
      timestampProperty:
        type: string
        description: property that contains the timestamp (year, month and date) according to ISO 8601 (e.g. 2018-01-30)

  ConverterType:
    description: Conerverter that enables the converting of a certain dataset format into the KomMonitor specific format of georesources, spatial units and indicators
    type: object
    required:
      - name
      - mimeType
    properties:
      name:
        type: string
        description: unique name of the converter
      mimeType:
        type: array
        description: list of MIME-types of the source format according to https://www.iana.org/assignments/media-types/media-types.xhtml that are supported by the converter
        items:
          type: string
      schemas:
        type: array
        description: list of schemas of the source format (e.g. http://schemas.opengis.net/gml/3.0.0/base/feature.xsd for MIME-type text/xml) that are supported by the converter
        items:
          type: string
      encodings:
        type: array
        description: list of encodings that are supported by the converter
        items:
          type: string
      parameters:
        type: array
        description: list with descriptions of additional parameters that are required for decoding a certain dataset format
        items:
          $ref: "#/definitions/ParameterType"

  ConverterDefinitionType:
    description: Definition of an conveter that should be used for decoding a certain dataset format into the KomMonitor specific format of georesources, spatial units and indicators and importing it
    type: object
    required:
      - name
      - mimeType
    properties:
      name:
        type: string
        description: unique name of the conveter
      mimeType:
        type: string
        description: the MIME-type of the source format according to https://www.iana.org/assignments/media-types/media-types.xhtml
      schema:
        type: string
        description: the schema of the source format (e.g. http://schemas.opengis.net/gml/3.0.0/base/feature.xsd for MIME-type text/xml)
      encoding:
        type: string
        description: encoding procedure or character set used (e.g. raw, base64, or UTF-8)
      parameters:
        type: array
        description: list of additional format related parameters as key-value-pairs that are required for decoding
        items:
          $ref: "#/definitions/ParameterValueType"

  ParameterType:
    description: Definition of an additional parameter that is either required for retrieving a dataset from a certain datsource |
     or for converting the dataset in a certain format (e.g. separator for CSV-based datasets)
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: name of the parameter
      description:
        type: string
        description: description of the parameter
      type:
        type: string
        description: type of the parameter
        enum:
          - string
          - number
          - boolean
          - array
      
  ParameterValueType:
    description: Additional parameter as key-value-pair that is either required for retrieving a dataset from a certain datsource |
     or for converting the dataset in a certain format (e.g. separator for CSV-based datasets)
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: name of the parameter
      value:
        type: string
        description: value of the parameter

  Error:
    description: A default error that will be responded if an unexpected server error occurs
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
      message:
        type: string