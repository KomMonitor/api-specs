openapi: 3.0.3
info:
  description: "Data Import API that enables the import of spatial data (spatial units, georesources and indicators) from various datasources into the KomMonitor Data Management layer."
  version: "3.0.0"
  title: "KomMonitor Data Import API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "s.drost@52north.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8087
    description: Development server
tags:
  - name: "spatial-units"
    description: "Spatial units/levels for which indicators can be associated (e.g. rastercells, building blocks, quarters, city districts, city boroughs, city)"
  - name: "georesources"
    description: "Additional georesources that are necessary for the computation of indicators (e.g. land use, locations of schools, streets/ways)"
  - name: "indicators"
    description: "Municipal indicators that provide statiscial time series information"

paths:
  ######## SpatialUnits
  /spatial-units:
    post:
      tags:
        - "spatial-units"
      summary: "Import a new spatial unit"
      description: "Import a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /spatial-units of KomMonitor Data Management API"
      operationId: "importSpatialUnit"
      requestBody:
        description: "Definitions to import spatial units"
        content:
          application/json:
            schema:
              $ref: "./definitions.yaml#/components/schemas/Import_SpatialUnitPOSTInputType"
      responses:
        "200":
          description: "List of created feature IDs"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ImportResponseType"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  /spatial-units/update:
    post:
      tags:
        - "spatial-units"
      summary: "Update a spatial unit"
      description: "Update a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls PUT /spatial-units of KomMonitor Data Management API"
      operationId: "updateSpatialUnit"
      requestBody:
        description: "Definitions to update spatial units"
        content:
          application/json:
            schema:
              $ref: "./definitions.yaml#/components/schemas/Update_SpatialUnitPOSTInputType"
      responses:
        "200":
          description: "List of created feature IDs"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ImportResponseType"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  ########## GEORESOURCES
  /georesources:
    post:
      tags:
        - "georesources"
      summary: "Import a new geo-resource"
      description: "Import a geo-resource dataset for a certain period of time. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /georesources of KomMonitor Data Management API"
      operationId: "importGeoresource"
      requestBody:
        description: "Definitions to create georesources"
        content:
          application/json:
            schema:
              $ref: "./definitions.yaml#/components/schemas/Import_GeoresourcePOSTInputType"
      responses:
        "200":
          description: "List of created feature IDs"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ImportResponseType"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  /georesources/update:
    post:
      tags:
        - "georesources"
      summary: "Update a georesource"
      description: "Update a georesource dataset for a certain period of time. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls PUT /georesources of KomMonitor Data Management API"
      operationId: "updateGeoresource"
      requestBody:
        description: "Definitions to update georesources"
        content:
          application/json:
            schema:
              $ref: "./definitions.yaml#/components/schemas/Update_GeoresourcePOSTInputType"
      responses:
        "200":
          description: "List of created feature IDs"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ImportResponseType"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  ######## INDICATORS
  /indicators/update:
    post:
      tags:
        - "indicators"
      summary: "Update or create a new indicator dataset"
      description: "Update or create an indicator dataset for a certain period of time and spatial unit/level. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls PUT /indicators of KomMonitor Data Management API"
      operationId: "updateIndicator"
      requestBody:
        description: "Definitions to create or update indicators"
        content:
          application/json:
            schema:
              $ref: "./definitions.yaml#/components/schemas/Update_IndicatorPOSTInputType"
      responses:
        "200":
          description: "List of created feature IDs"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ImportResponseType"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  ######## UPLOAD
  /upload:
    post:
      tags:
        - "upload"
      summary: "Upload a file"
      description: "Upload a file that can be used as datasource for importing or updating a KomMonitor resource."
      operationId: "upload"
      requestBody:
        description: "File that should be uploaded"
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: "The name that will be used for storing the file on the server"
                file:
                  type: string
                  format: binary
                  description: "The file to upload"
      responses:
        "201":
          description: "File uploaded"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

    get:
      tags:
        - "upload"
      summary: "Get a list of files"
      description: "Retrieve a list of information for all uploaded files"
      operationId: "getUploadedFiles"
      responses:
        "200":
          description: "List of file names"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./definitions.yaml#/components/schemas/UploadedFileType"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

  ######## CONVERTERS
  /converters:
    get:
      tags:
        - "converters"
      summary: "Retrieve information about all available converters"
      description: "Retrieve information such like supported formats and importing options about all available converters for decoding datasets and importing them into the KomMonitor Data Management layer"
      operationId: "getConverters"
      responses:
        "200":
          description: "List of all available converters"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./definitions.yaml#/components/schemas/ConverterType"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"


  /converters/{name}:
    get:
      tags:
        - "converters"
      summary: "Retrieve information about the selected converters"
      description: "Retrieve information such like supported formats and decoding options about the selected converters for decoding a certain dataset and importing it into the KomMonitor Data Management layer"
      operationId: "getConverterByName"
      parameters:
        - name: "name"
          in: "path"
          description: "unique name of the converter"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "A converter"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/ConverterType"
        "401":
          description: "Unauthenticated"
        "404":
          description: "A converter with the specified name was not found"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"


  ######## DATASOURCE TYPES
  /datasourceTypes:
    get:
      tags:
        - "datasources"
      summary: "Retrieve information about all supported datasource types"
      description: "Retrieve information about the parameters of all supported datasource types that can be used for importing data into the KomMonitor Data Management layer"
      operationId: "getSupportedDataSourceTypes"
      responses:
        "200":
          description: "List of all available datasource types"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./definitions.yaml#/components/schemas/DataSourceType"
        "401":
          description: "Unauthenticated"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"


  /datasourceTypes/{type}:
    get:
      tags:
        - "datasources"
      summary: "Retrieve information about the selected datasource type"
      description: "Retrieve information about the parameters for the selected datasource type that can be used for importing data into the KomMonitor Data Management layer"
      operationId: "getSupportedDataSourceTypeByType"
      parameters:
        - name: "type"
          in: "path"
          description: "unique type of the datasource"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "A datasource type"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/DataSourceType"
        "401":
          description: "Unauthenticated"
        "404":
          description: "No support for the specified datasource type"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "./definitions.yaml#/components/schemas/Error"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"